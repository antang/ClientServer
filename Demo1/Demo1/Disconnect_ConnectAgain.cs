///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Demo1
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Disconnect_ConnectAgain recording.
    /// </summary>
    [TestModule("0e496d5f-6086-4bc2-9aa7-e3d8890d3222", ModuleType.Recording, 1)]
    public partial class Disconnect_ConnectAgain : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Demo1Repository repository.
        /// </summary>
        public static Demo1Repository repo = Demo1Repository.Instance;

        static Disconnect_ConnectAgain instance = new Disconnect_ConnectAgain();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Disconnect_ConnectAgain()
        {
            var_LinkServer = "D:\\Topic_Research\\Git\\ClientServer\\SERVER\\ServerTest\\bin\\Debug\\ServerTest.exe";
            var_IPServer = "";
            var_LinkClient = "D:\\Topic_Research\\Git\\ClientServer\\CLIENT\\ClientTest\\bin\\Debug\\ClientTest.exe";
            var_ConnectSuccessful = "is connecting with you";
            var_NotifyDisconnect = "Agent disconnected !";
            var_NotifyConnect = "New agent received...";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Disconnect_ConnectAgain Instance
        {
            get { return instance; }
        }

#region Variables

        string _var_LinkServer;

        /// <summary>
        /// Gets or sets the value of variable var_LinkServer.
        /// </summary>
        [TestVariable("05fc8f0f-8f50-4721-8bd7-6e08ac4cbdba")]
        public string var_LinkServer
        {
            get { return _var_LinkServer; }
            set { _var_LinkServer = value; }
        }

        string _var_IPServer;

        /// <summary>
        /// Gets or sets the value of variable var_IPServer.
        /// </summary>
        [TestVariable("437b133f-575e-4336-a534-89dc8d5ca061")]
        public string var_IPServer
        {
            get { return _var_IPServer; }
            set { _var_IPServer = value; }
        }

        string _var_LinkClient;

        /// <summary>
        /// Gets or sets the value of variable var_LinkClient.
        /// </summary>
        [TestVariable("821efa29-7f14-4c9b-8f81-fbfd13a18e2c")]
        public string var_LinkClient
        {
            get { return _var_LinkClient; }
            set { _var_LinkClient = value; }
        }

        string _var_ConnectSuccessful;

        /// <summary>
        /// Gets or sets the value of variable var_ConnectSuccessful.
        /// </summary>
        [TestVariable("bdbc5988-ace7-4a85-96e7-63bae05cc8f5")]
        public string var_ConnectSuccessful
        {
            get { return _var_ConnectSuccessful; }
            set { _var_ConnectSuccessful = value; }
        }

        string _var_NotifyDisconnect;

        /// <summary>
        /// Gets or sets the value of variable var_NotifyDisconnect.
        /// </summary>
        [TestVariable("9c142676-912a-474b-bdad-8b8624a52da6")]
        public string var_NotifyDisconnect
        {
            get { return _var_NotifyDisconnect; }
            set { _var_NotifyDisconnect = value; }
        }

        string _var_NotifyConnect;

        /// <summary>
        /// Gets or sets the value of variable var_NotifyConnect.
        /// </summary>
        [TestVariable("5203732e-df2b-4346-8317-c95c9c206d4c")]
        public string var_NotifyConnect
        {
            get { return _var_NotifyConnect; }
            set { _var_NotifyConnect = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.4.6")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.4.6")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 0;
            Delay.SpeedFactor = 1.0;

            Init();

            // Run Server
            Host.Local.RunApplication(var_LinkServer, "", "D:\\Form KMS\\ClientServer-master\\ClientServer-master\\SERVER\\ServerTest\\bin\\Debug", false);
            Delay.Milliseconds(0);
            
            var_IPServer = repo.ServerSide.TxtIPServer.Element.GetAttributeValueText("Text");
            Delay.Milliseconds(0);
            
            // Run Client
            Host.Local.RunApplication(var_LinkClient, "", "D:\\Form KMS\\ClientServer-master\\ClientServer-master\\CLIENT\\ClientTest\\bin\\Debug", false);
            Delay.Milliseconds(0);
            
            repo.ClientSide.TxtIPAddress.PressKeys(var_IPServer, 100);
            Delay.Milliseconds(100);
            
            repo.ClientSide.BtnConnect.Click();
            Delay.Milliseconds(200);
            
            Validate.Attribute(repo.ClientSide.TxtChatScreenInfo, "Text", new Regex(Regex.Escape(var_ConnectSuccessful)));
            Delay.Milliseconds(0);
            
            repo.ClientSide.BtnDisconnect.Click();
            Delay.Milliseconds(200);
            
            repo.ServerSide.Self.Activate();
            Delay.Milliseconds(0);
            
            Validate.Attribute(repo.ServerSide.TxtChatScreenInfo, "Text", new Regex(Regex.Escape(var_NotifyConnect)));
            Delay.Milliseconds(0);
            
            repo.ClientSide.Self.Activate();
            Delay.Milliseconds(0);
            
            repo.ClientSide.BtnConnect.Click();
            Delay.Milliseconds(200);
            
            Validate.Attribute(repo.ClientSide.TxtChatScreenInfo, "Text", new Regex(Regex.Escape(var_ConnectSuccessful)));
            Delay.Milliseconds(0);
            
            Host.Local.KillApplication(repo.ServerSide.Self);
            Delay.Milliseconds(0);
            
            Host.Local.KillApplication(repo.ClientSide.Self);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
